version: 2.1

orbs:
  rotate-aws-keys: ovotech/aws-rotate-keys@1

docker_sbt: &docker_sbt
  docker:
    - image: circleci/openjdk:8-jdk-stretch
      environment:
        DEBIAN_FRONTEND: noninteractive
        TERM: xterm
        AWS_DEFAULT_REGION: eu-west-1
  working_directory: ~/repo
  environment:
    JVM_OPTS: -Xmx3200m

cache_save: &cache_save
  save_cache:
    paths:
      - ~/.cache/coursier
      - ~/.ivy2/cache
      - ~/.m2
      - ~/.sbt
    key: v1-{{ checksum "build.sbt" }}

cache_restore: &cache_restore
  restore_cache:
    keys:
      - v1-{{ checksum "build.sbt" }}
      - v1-

setup_git: &setup_git
  run:
    name: Set up git
    command: |
      git config --global user.name "OVO Scala Steward"
      git config --global user.email "47038308+ovo-scala-steward@users.noreply.github.com"

install_aws: &install_aws
  run:
    name: Install aws cli
    command: |
      PATH=$PATH:~/.local/bin && export PATH=$PATH
      sudo apt-get update && sudo apt-get install -y jq python3-pip curl
      pip3 install --user awscli
      echo "export PATH=$PATH" >> $BASH_ENV

jobs:
  test:
    <<: *docker_sbt
    steps:
      - checkout
      - *cache_restore
      - *setup_git
      - run:
          name: Run tests
          command: |
            sbt test < /dev/null
      - *cache_save
  release:
    <<: *docker_sbt
    steps:
      - checkout
      - *cache_restore
      - *setup_git
      - *install_aws
      - setup_remote_docker
      - run:
          name: Publish docker image
          command: |
            `aws ecr get-login --registry-ids $AWS_ACCOUNT_ID --no-include-email --region eu-west-1`
            sbt core/docker:publish < /dev/null
  rotate-aws-keys:
    docker:
      - image: circleci/python:3-buster
    steps:
      - *install_aws
      - rotate-aws-keys/rotate:
          aws-username: "${AWS_USER}"
          circleci-token: "${CIRCLECI_TOKEN}"
          aws-access-key-id-var: "AWS_ACCESS_KEY_ID"
          aws-secret-access-key-var: "AWS_SECRET_ACCESS_KEY"

workflows:
  version: 2
  scala-steward:
    jobs:
      - test
      - release:
          requires:
            - test
          filters:
            branches:
              only: master
  rotate-keys:
    triggers:
      - schedule:
          cron: "30 10 * * 1,4" # Every Monday and Thursday at 10:30
          filters:
            branches:
              only: master
    jobs:
      - rotate-aws-keys
